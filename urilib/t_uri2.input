#
# Examples from draft-fielding-uri-syntax-03
#
# Normal examples (C.1)
#
# Expect ftp:h
#
ftp:h          	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g
#
g            	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g
#
./g          	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g/
#
g/           	http://a/b/c/d;p?q
#
# Expect http://a/g
#
/g           	http://a/b/c/d;p?q
#
# Expect http://g
#
//g          	http://a/b/c/d;p?q
#
# Expect http://a/b/c/?y (our implementation chose to replace the query
# instead of overriding the whole path)
#
?y           	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g?y
#
g?y          	http://a/b/c/d;p?q
#
# Expect (current document)#s
#
#s           	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g#s
#
g#s          	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g?y#s
#
g?y#s        	http://a/b/c/d;p?q
#
# Expect http://a/b/c/;x (our implementation chose to replace the param
# instead of overriding the whole path)
#
;x           	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g;x
#
g;x          	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g;x?y#s
#
g;x?y#s      	http://a/b/c/d;p?q
#
# Expect http://a/b/c/
#
.            	http://a/b/c/d;p?q
#
# Expect http://a/b/c/
#
./           	http://a/b/c/d;p?q
#
# Expect http://a/b/
#
..           	http://a/b/c/d;p?q
#
# Expect http://a/b/
#
../          	http://a/b/c/d;p?q
#
# Expect http://a/b/g
#
../g         	http://a/b/c/d;p?q
#
# Expect http://a/
#
../..        	http://a/b/c/d;p?q
#
# Expect http://a/
#
../../       	http://a/b/c/d;p?q
#
# Expect http://a/g
#
../../g      	http://a/b/c/d;p?q
#
# Expect http://a/b/c/d;p?q
#
	http://a/b/c/d;p?q
#
# Abnormal examples (C.2)
#
#
# Expect http://a/../g or http://a/g (both acceptable)
#
../../../g   	http://a/b/c/d;p?q
#
# Expect http://a/../../g or http://a/g (both acceptable)
#
../../../../g 	http://a/b/c/d;p?q
#
# Expect http://a/./g (our implementation chose to reduce this path too
# because all unices and windows based server behave this way)
#
/./g         	http://a/b/c/d;p?q
#
# Expect http://a/../g (our implementation chose to reduce this path too
# because all unices and windows based server behave this way)
#
/../g        	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g.
#
g.           	http://a/b/c/d;p?q
#
# Expect http://a/b/c/.g
#
.g           	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g..
#
g..          	http://a/b/c/d;p?q
#
# Expect http://a/b/c/..g
#
..g          	http://a/b/c/d;p?q
#
# Expect http://a/b/g
#
./../g       	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g/
#
./g/.        	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g/h
#
g/./h        	http://a/b/c/d;p?q
#
# Expect http://a/b/c/h
#
g/../h       	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g;x=1/y (i don't understand that, whatever is in
# params or query must not be interpreted. /./ or ../ may be meaningfull
# for the server handling the request. This is not a 'path' component, is
# it ?)
#
g;x=1/./y    	http://a/b/c/d;p?q
#
# Expect http://a/b/c/y (same as above)
#
g;x=1/../y   	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g?y/./x
#
g?y/./x      	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g?y/../x
#
g?y/../x     	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g#s/./x
#
g#s/./x      	http://a/b/c/d;p?q
#
# Expect http://a/b/c/g#s/../x
#
g#s/../x     	http://a/b/c/d;p?q
